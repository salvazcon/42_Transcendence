# Map Upgrade header for WebSocket support
map $http_upgrade $connection_upgrade {
default upgrade;
''      close;
}

# Frontend container url
upstream frontend {
	server frontend:8080;
}

# User backend container url
upstream backend-user {
	server backend-user:3000;
}

# Auth backend container url
upstream backend-auth {
	server backend-auth:3000;
}

server {
	listen 8081;
	server_name _;

	# User backend
	location /api/user/ {
		proxy_pass http://backend-user/;
		proxy_set_header Host $host;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header X-Forwarded-Proto $scheme;
	}

	# Auth backend
	location /api/auth/ {
		proxy_pass http://backend-auth/;
		proxy_set_header Host $host;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header X-Forwarded-Proto $scheme;
	}

}

# HTTPS server (main server)
server {
	listen 8080 ssl;
	server_name _;

	# Certs config
	ssl_certificate /etc/nginx/ssl/cert.pem;
	ssl_certificate_key /etc/nginx/ssl/key.pem;
	ssl_protocols TLSv1.2 TLSv1.3;

	# Frontend location
	location / {
		proxy_pass http://frontend/;
		proxy_set_header Host $host;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header X-Forwarded-Proto $scheme;

		# WebSocket
		proxy_http_version 1.1;
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection $connection_upgrade;
	}
}